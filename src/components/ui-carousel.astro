---
import '@splidejs/splide/css';

// STYLES ==================================================================================================================================
const {class: cEl = '', 'class:list': classes = '', dates} = Astro.props;
---

<div class:list={['splide', cEl, classes]} role="group" aria-label="Splide Basic HTML Example" data-dates={dates}>
  <div class="splide__track">
    <ul class="splide__list">
      <slot />
    </ul>
  </div>
</div>

<script>
  import Splide from '@splidejs/splide';

  document.querySelectorAll('.splide').forEach((value) => {
    const el = value as HTMLElement;
    const dates = el.dataset.dates ? JSON.parse(el.dataset.dates) : undefined;

    const splide = new Splide(el, {
      breakpoints: {
        640: {fixedWidth: '100%'},
      },
      fixedWidth: '24rem',
      gap: '2rem',
      padding: '1rem',
      pagination: false,
      type: 'loop',
    });

    splide.on('overflow', (isOverflow) => {
      splide.go(0);
      splide.options = {arrows: isOverflow, drag: isOverflow, clones: isOverflow ? undefined : 0};
    });

    splide.mount();

    if (dates) splide.remove(({slide: {dataset}}) => new Date(dates[dataset.slug as string]).getTime() < Date.now());
  });
</script>

<style is:global>
  .splide__arrow {
    background-color: rgb(var(--color-primary)) !important;
  }

  .splide__arrow svg {
    fill: white !important;
  }

  .splide:not(.is-overflow) .splide__arrows {
    display: none;
  }

  .splide:not(.is-overflow) .splide__list {
    justify-content: center;
  }

  .splide:not(.is-overflow) .splide__slide:last-child {
    margin-right: 0 !important;
  }
</style>
