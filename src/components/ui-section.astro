---
import type { z } from 'zod';
import type { zUiSectionP } from '~/schemas/ui';
import { bg } from '~/styles/ui';

// PROPS ===================================================================================================================================
const {asideRight = false, border = 'none', expanded = false, intent = 'white'} = Astro.props;

// VARS ====================================================================================================================================
const hasBorderBottom = ['all', 'bottom'].includes(border);
const hasBorderTop = ['all', 'top'].includes(border);

// STYLES ==================================================================================================================================
const {class: kEl = '', cAside: kAside = '', cBorder: kBorder = '', cHeader = '', 'class:list': classes = []} = Astro.props;
const cBorder = ['relative w-full h-16 [mask-image:url(/border.svg)]', bg(intent), kBorder];
const cAside = `flex-none w-full flex flex-col gap-8 max-w-xl md:max-w-xs lg:max-w-md xl:max-w-xl 2xl:max-w-2xl`;
const cEl = [`overflow-hidden py-12`, bg(intent), {'pt-4': hasBorderTop}, {'pb-4': hasBorderBottom}, {'px-6 md:px-12': !expanded}];

// TYPES ===================================================================================================================================
export type Props = z.infer<typeof zUiSectionP>;
---

{hasBorderTop && <div class:list={[cBorder, '-mt-16']}/>}
<section class:list={[cEl, kEl, classes]}>
  <div class:list={expanded ? 'w-full' : 'container mx-auto'}>
    {
      Astro.slots.has('header') && (
        <div class:list={[{'mx-4': expanded}, cHeader]}>
          <slot name="header" />
        </div>
      )
    }
    <div class="w-full flex flex-col items-center gap-8 md:flex-row md:items-start lg:gap-12">
      {
        Astro.slots.has('aside') && (
          <aside class:list={['empty:hidden', {'md:order-2': asideRight}, cAside, kAside]}><slot name="aside" /></aside>
        )
      }
      <div class="flex-1 w-full flex flex-col gap-8 items-start">
        <slot />
      </div>
    </div>
  </div>
</section>
{hasBorderBottom && <div class:list={[cBorder, 'rotate-180']} />}
